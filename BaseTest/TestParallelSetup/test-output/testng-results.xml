<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="6" total="22" passed="14" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2019-02-09T10:05:11Z" name="Default suite" finished-at="2019-02-09T10:05:27Z" duration-ms="16710">
    <groups>
    </groups>
    <test started-at="2019-02-09T10:05:11Z" name="Default test" finished-at="2019-02-09T10:05:27Z" duration-ms="16710">
      <class name="parallel.testcases.TestFunctionalityB">
        <test-method is-config="true" signature="setupTest(java.lang.String)[pri:0, instance:parallel.testcases.TestFunctionalityB@366647c2]" started-at="2019-02-09T10:05:11Z" name="setupTest" finished-at="2019-02-09T10:05:14Z" duration-ms="3388" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:parallel.testcases.TestFunctionalityB@366647c2]" started-at="2019-02-09T10:05:14Z" name="beforeClass" finished-at="2019-02-09T10:05:14Z" duration-ms="16" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="testB_One()[pri:0, instance:parallel.testcases.TestFunctionalityB@366647c2]" started-at="2019-02-09T10:05:14Z" name="testB_One" finished-at="2019-02-09T10:05:15Z" duration-ms="718" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testB_One -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:parallel.testcases.TestFunctionalityB@366647c2]" started-at="2019-02-09T10:05:15Z" name="afterMethod" finished-at="2019-02-09T10:05:15Z" duration-ms="393" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="testB_four()[pri:0, instance:parallel.testcases.TestFunctionalityB@366647c2]" started-at="2019-02-09T10:05:15Z" name="testB_four" finished-at="2019-02-09T10:05:15Z" duration-ms="176" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testB_four -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:parallel.testcases.TestFunctionalityB@366647c2]" started-at="2019-02-09T10:05:15Z" name="afterMethod" finished-at="2019-02-09T10:05:15Z" duration-ms="94" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="testB_three()[pri:0, instance:parallel.testcases.TestFunctionalityB@366647c2]" started-at="2019-02-09T10:05:15Z" name="testB_three" finished-at="2019-02-09T10:05:16Z" duration-ms="251" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at parallel.testcases.TestFunctionalityB.testB_three(TestFunctionalityB.java:33)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testB_three -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:parallel.testcases.TestFunctionalityB@366647c2]" started-at="2019-02-09T10:05:17Z" name="afterMethod" finished-at="2019-02-09T10:05:17Z" duration-ms="99" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="testB_two()[pri:0, instance:parallel.testcases.TestFunctionalityB@366647c2]" started-at="2019-02-09T10:05:17Z" name="testB_two" finished-at="2019-02-09T10:05:17Z" duration-ms="145" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at parallel.testcases.TestFunctionalityB.testB_two(TestFunctionalityB.java:24)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testB_two -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:parallel.testcases.TestFunctionalityB@366647c2]" started-at="2019-02-09T10:05:17Z" name="afterMethod" finished-at="2019-02-09T10:05:17Z" duration-ms="46" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:parallel.testcases.TestFunctionalityB@366647c2]" started-at="2019-02-09T10:05:27Z" name="afterTest" finished-at="2019-02-09T10:05:27Z" duration-ms="285" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- parallel.testcases.TestFunctionalityB -->
      <class name="parallel.testcases.TestFunctionalityA">
        <test-method signature="testA_One()[pri:0, instance:parallel.testcases.TestFunctionalityA@6a6afff2]" started-at="2019-02-09T10:05:17Z" name="testA_One" finished-at="2019-02-09T10:05:19Z" duration-ms="2001" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testA_One -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:parallel.testcases.TestFunctionalityA@6a6afff2]" started-at="2019-02-09T10:05:17Z" name="beforeClass" finished-at="2019-02-09T10:05:17Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:parallel.testcases.TestFunctionalityA@6a6afff2]" started-at="2019-02-09T10:05:19Z" name="afterMethod" finished-at="2019-02-09T10:05:20Z" duration-ms="49" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="testA_four()[pri:0, instance:parallel.testcases.TestFunctionalityA@6a6afff2]" started-at="2019-02-09T10:05:20Z" name="testA_four" finished-at="2019-02-09T10:05:21Z" duration-ms="1561" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testA_four -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:parallel.testcases.TestFunctionalityA@6a6afff2]" started-at="2019-02-09T10:05:21Z" name="afterMethod" finished-at="2019-02-09T10:05:21Z" duration-ms="79" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="testA_three()[pri:0, instance:parallel.testcases.TestFunctionalityA@6a6afff2]" started-at="2019-02-09T10:05:21Z" name="testA_three" finished-at="2019-02-09T10:05:23Z" duration-ms="2096" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testA_three -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:parallel.testcases.TestFunctionalityA@6a6afff2]" started-at="2019-02-09T10:05:23Z" name="afterMethod" finished-at="2019-02-09T10:05:23Z" duration-ms="49" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="testA_two()[pri:0, instance:parallel.testcases.TestFunctionalityA@6a6afff2]" started-at="2019-02-09T10:05:23Z" name="testA_two" finished-at="2019-02-09T10:05:24Z" duration-ms="488" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testA_two -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:parallel.testcases.TestFunctionalityA@6a6afff2]" started-at="2019-02-09T10:05:24Z" name="afterMethod" finished-at="2019-02-09T10:05:24Z" duration-ms="78" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- parallel.testcases.TestFunctionalityA -->
      <class name="parallel.testcases.TestFunctionalityD">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:parallel.testcases.TestFunctionalityD@1649b0e6]" started-at="2019-02-09T10:05:24Z" name="beforeClass" finished-at="2019-02-09T10:05:24Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="testD_One()[pri:0, instance:parallel.testcases.TestFunctionalityD@1649b0e6]" started-at="2019-02-09T10:05:24Z" name="testD_One" finished-at="2019-02-09T10:05:24Z" duration-ms="205" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testD_One -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:parallel.testcases.TestFunctionalityD@1649b0e6]" started-at="2019-02-09T10:05:24Z" name="afterMethod" finished-at="2019-02-09T10:05:24Z" duration-ms="94" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="testD_four()[pri:0, instance:parallel.testcases.TestFunctionalityD@1649b0e6]" started-at="2019-02-09T10:05:24Z" name="testD_four" finished-at="2019-02-09T10:05:24Z" duration-ms="187" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testD_four -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:parallel.testcases.TestFunctionalityD@1649b0e6]" started-at="2019-02-09T10:05:24Z" name="afterMethod" finished-at="2019-02-09T10:05:24Z" duration-ms="63" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="testD_three()[pri:0, instance:parallel.testcases.TestFunctionalityD@1649b0e6]" started-at="2019-02-09T10:05:24Z" name="testD_three" finished-at="2019-02-09T10:05:25Z" duration-ms="213" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testD_three -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:parallel.testcases.TestFunctionalityD@1649b0e6]" started-at="2019-02-09T10:05:25Z" name="afterMethod" finished-at="2019-02-09T10:05:25Z" duration-ms="78" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="testD_two()[pri:0, instance:parallel.testcases.TestFunctionalityD@1649b0e6]" started-at="2019-02-09T10:05:25Z" name="testD_two" finished-at="2019-02-09T10:05:25Z" duration-ms="250" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testD_two -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:parallel.testcases.TestFunctionalityD@1649b0e6]" started-at="2019-02-09T10:05:25Z" name="afterMethod" finished-at="2019-02-09T10:05:25Z" duration-ms="125" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- parallel.testcases.TestFunctionalityD -->
      <class name="parallel.testcases.TestFunctionalityC">
        <test-method signature="testC_One()[pri:0, instance:parallel.testcases.TestFunctionalityC@865dd6]" started-at="2019-02-09T10:05:25Z" name="testC_One" finished-at="2019-02-09T10:05:26Z" duration-ms="390" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testC_One -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:parallel.testcases.TestFunctionalityC@865dd6]" started-at="2019-02-09T10:05:25Z" name="beforeClass" finished-at="2019-02-09T10:05:25Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:parallel.testcases.TestFunctionalityC@865dd6]" started-at="2019-02-09T10:05:26Z" name="afterMethod" finished-at="2019-02-09T10:05:26Z" duration-ms="82" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="testC_four()[pri:0, instance:parallel.testcases.TestFunctionalityC@865dd6]" started-at="2019-02-09T10:05:26Z" name="testC_four" finished-at="2019-02-09T10:05:26Z" duration-ms="396" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testC_four -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:parallel.testcases.TestFunctionalityC@865dd6]" started-at="2019-02-09T10:05:26Z" name="afterMethod" finished-at="2019-02-09T10:05:26Z" duration-ms="78" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="testC_three()[pri:0, instance:parallel.testcases.TestFunctionalityC@865dd6]" started-at="2019-02-09T10:05:26Z" name="testC_three" finished-at="2019-02-09T10:05:27Z" duration-ms="469" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testC_three -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:parallel.testcases.TestFunctionalityC@865dd6]" started-at="2019-02-09T10:05:27Z" name="afterMethod" finished-at="2019-02-09T10:05:27Z" duration-ms="70" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="testC_two()[pri:0, instance:parallel.testcases.TestFunctionalityC@865dd6]" started-at="2019-02-09T10:05:27Z" name="testC_two" finished-at="2019-02-09T10:05:27Z" duration-ms="328" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testC_two -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:parallel.testcases.TestFunctionalityC@865dd6]" started-at="2019-02-09T10:05:27Z" name="afterMethod" finished-at="2019-02-09T10:05:27Z" duration-ms="63" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- parallel.testcases.TestFunctionalityC -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
